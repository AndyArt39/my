const string = `
Тиунов Тимофей  Сергеевич,  системный архитектор
Иванов Иван Иванович , frontend-разработчик
`

// Создаём функцию которая в качестве аргумента принимает исходную строку
function parseEmployeesData(dataString) {
  return dataString
    /* Разбиваем текст по строкам (то есть по переносам строки).
    .split('\n') разобъёт строку на массив подстрок так как исходная
    строка может иметь переносы строк */
    .split('\n')
    /* Убираем пустые строки и строки с пробелами. В качестве условия указываем,
    что строка (line) которую мы проверяем, при условии что мы убрали из нее все
    ненужные пробелы .trim(), её длинна должна быть больше 0. По сути она не
    должна быть пустой! */
    .filter(line => line.trim().length > 0)
    /* преобразуем каждую строку с помощью .map который принимает в себя
    строку (line) и вернет нам объект {surname, name, middleName, occupation} */
    .map(line => {
      /* далее разбиваем нашу строку на две части fullName и occupation,
      где через запятую вписаны ФИО и должность */
      const [fullName, occupation] = line
        //разбиваем строку по запятой
        .split(',')
        //убираем лишние пробелы (после или перед запятой)
        .map(str => str.trim())
        /* убираем из массива пустые строки, которые могут появиться если в тексте
        есть несколько пробелов подряд в результате ручного ввода */
        .filter(text => text.length > 0)
      //далее нужно разбить ФИО на составляющие
      const [surname, name, middleName] = fullName
        //ФИО в тексте написаны через пробел, так что разбиваем по пробелу
        .split(' ')
        //и тоже убираем лишнее
        .filter(text => text.length > 0)
      //возвращаем объект со структурированными данными
      return {
        surname, name, middleName, occupation
      }
    })
}

console.log(parseEmployeesData(string))
